---

- name: "Check for existing IPv4 {{ item }}{{ etc_hosts_suffix }} entry"
  lineinfile:
    path: "{{ etc_hosts_path }}"
    regex: '{{ item.address }}.* {{ item.name }}{{ etc_hosts_suffix }}( .*|$)'
    state: absent
  check_mode: yes
  changed_when: no
  register: _has_existing_entry

- name: Add IPv4 entry from list
  block:
  # Match any IP to allow redefining hostnames
  - name: "Clear IPv4 entries for {{ item.name }}{{ etc_hosts_suffix }} from {{ etc_hosts_path }}"
    lineinfile:
      path: "{{ etc_hosts_path }}"
      regex: '(.* ){{ item.name }}{{ etc_hosts_suffix }}( .*|$)'
      line: '\1\2'
      backrefs: yes
    become: yes

  - name: "Check for IPv4 {{ item.name }}{{ etc_hosts_suffix }} entry"
    lineinfile:
      path: "{{ etc_hosts_path }}"
      regex: '^{{ item.address }}.*$'
      state: absent
    check_mode: yes
    changed_when: no
    register: has_entry

  - name: "Add IPv4 stub entries for {{ item.name }}{{ etc_hosts_suffix }}"
    lineinfile:
      path: "{{ etc_hosts_path }}"
      line: '{{ item.address }}'
    when: has_entry.found == 0
    become: yes

  - name: "Add IPv4 entry for {{ item.name }}{{ etc_hosts_suffix }} to {{ etc_hosts_path }}"
    lineinfile:
      path: "{{ etc_hosts_path }}"
      regex: '{{ item.address }} *((?: [^ \r\n]*)*)$'
      line: '{{ item.address }} {{ item.name }}{{ etc_hosts_suffix }}\1'
      backrefs: yes
    become: yes

  when: _has_existing_entry.found == 0
